"use client";

import { useState, useEffect } from "react";

export default function NewsletterForm() {
  const [email, setEmail] = useState("");
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState<{ type: "success" | "error"; text: string } | null>(null);

  const FORM_URL =
    "https://gmail.us22.list-manage.com/subscribe/post?u=fc2997403d1eb3ffd6f94cd65&id=977b3e72e6&f_id=00e4c2e1f0";

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setMessage(null);

    try {
      const formData = new FormData();
      formData.append("EMAIL", email);
      formData.append("SOURCE", "calcportalpro.com");

      await fetch(FORM_URL, {
        method: "POST",
        body: formData,
        mode: "no-cors",
      });

      setMessage({ type: "success", text: "🎉 Thanks for subscribing!" });
      setEmail("");
    } catch (error) {
      setMessage({ type: "error", text: "❌ Something went wrong. Please try again." });
    } finally {
      setLoading(false);
    }
  };

  // Auto-dismiss messages after 5 seconds
  useEffect(() => {
    if (message) {
      const timer = setTimeout(() => setMessage(null), 5000);
      return () => clearTimeout(timer);
    }
  }, [message]);

  return (
    <div className="bg-white rounded-xl shadow-lg p-6 max-w-md mx-auto">
      <h2 className="text-2xl font-bold text-secondary-500 mb-4">
        Subscribe to our Newsletter
      </h2>
      <p className="text-secondary-100 mb-6 text-sm">
        Get the latest calculators, financial tips, and updates from{" "}
        <strong>CalcPortal Pro</strong>.
      </p>

      <form onSubmit={handleSubmit} className="space-y-4">
        <input
          type="email"
          name="EMAIL"
          placeholder="Enter your email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
          className="w-full border rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500"
        />

        {/* hidden SOURCE field */}
        <input type="hidden" name="SOURCE" value="calcportalpro.com" />

        <button
          type="submit"
          disabled={loading}
          className="w-full btn-primary py-2 px-4 rounded-lg font-semibold"
        >
          {loading ? "Subscribing..." : "Subscribe"}
        </button>
      </form>

      {/* Success / Error Notice */}
      {message && (
        <div
          className={`mt-4 p-3 rounded-lg text-center text-sm font-medium transition-opacity duration-500 ${
            message.type === "success"
              ? "bg-green-100 text-green-700 border border-green-300"
              : "bg-red-100 text-red-700 border border-red-300"
          }`}
        >
          {message.text}
        </div>
      )}
    </div>
  );
}
